// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_testing/test/presentation/features/home/bloc/home_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_testing/domain/model/coin_model.dart' as _i7;
import 'package:flutter_testing/domain/model/failure_model.dart' as _i5;
import 'package:flutter_testing/domain/model/success_model.dart' as _i6;
import 'package:flutter_testing/domain/repository/coin_repository.dart' as _i2;
import 'package:fpdart/fpdart.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CoinRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCoinRepository extends _i1.Mock implements _i2.CoinRepository {
  @override
  _i3.Future<
      _i4.Either<_i5.FailureModel,
          _i6.SuccessModel<List<_i7.CoinModel>>>> getCoins(
    int? page,
    int? size,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCoins,
          [
            page,
            size,
          ],
        ),
        returnValue: _i3.Future<
            _i4.Either<_i5.FailureModel,
                _i6.SuccessModel<List<_i7.CoinModel>>>>.value(_i8.dummyValue<
            _i4
            .Either<_i5.FailureModel, _i6.SuccessModel<List<_i7.CoinModel>>>>(
          this,
          Invocation.method(
            #getCoins,
            [
              page,
              size,
            ],
          ),
        )),
        returnValueForMissingStub: _i3.Future<
            _i4.Either<_i5.FailureModel,
                _i6.SuccessModel<List<_i7.CoinModel>>>>.value(_i8.dummyValue<
            _i4
            .Either<_i5.FailureModel, _i6.SuccessModel<List<_i7.CoinModel>>>>(
          this,
          Invocation.method(
            #getCoins,
            [
              page,
              size,
            ],
          ),
        )),
      ) as _i3.Future<
          _i4.Either<_i5.FailureModel, _i6.SuccessModel<List<_i7.CoinModel>>>>);
}
